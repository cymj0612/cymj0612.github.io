<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>椘悆여자</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-19T03:08:48.482Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>只愿有你的芳华</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CentOS7下安装hadoop3.0.3</title>
    <link href="http://yoursite.com/2018/07/18/CentOS7%E5%AE%89%E8%A3%85hadoop3-0-3/"/>
    <id>http://yoursite.com/2018/07/18/CentOS7安装hadoop3-0-3/</id>
    <published>2018-07-18T13:20:24.000Z</published>
    <updated>2018-07-19T03:08:48.482Z</updated>
    
    <content type="html"><![CDATA[<p>在安装hadoop之前，请自行学习安装虚拟机以及CentOS7系统。</p><h1 id="一、安装JDK"><a href="#一、安装JDK" class="headerlink" title="一、安装JDK"></a>一、安装JDK</h1><h2 id="1-centos下默认安装openjdk，需要先卸载。检查是否含有openjdk安装包，在终端窗口输入命令行："><a href="#1-centos下默认安装openjdk，需要先卸载。检查是否含有openjdk安装包，在终端窗口输入命令行：" class="headerlink" title="1.centos下默认安装openjdk，需要先卸载。检查是否含有openjdk安装包，在终端窗口输入命令行："></a>1.centos下默认安装openjdk，需要先卸载。检查是否含有openjdk安装包，在终端窗口输入命令行：</h2><pre><code>java -versionrpm -qa | grep java</code></pre><p><img src="http://p5n3jfo7k.bkt.clouddn.com/201803162201_407.png" alt="avatar"></p><h2 id="2-卸载openjdk："><a href="#2-卸载openjdk：" class="headerlink" title="2.卸载openjdk："></a>2.卸载openjdk：</h2><pre><code>rpm -e --nodeps + 需要卸载的文件名（注意，noarch文件不必删除）</code></pre><p>例如：</p><pre><code>rpm -e --nodeps java-1.7.0-openjdk-1.7.0.111-2.6.7.8.el7.x86_64rpm -e --nodeps java-1.8.0-openjdk-1.8.0.102-4.b14.el7.x86_64rpm -e --nodeps java-1.8.0-openjdk-headless-1.8.0.102-4.b14.el7.x86_64rpm -e --nodeps java-1.7.0-openjdk-headless-1.7.0.111-2.6.7.8.el7.x86_64</code></pre><p>执行完上述操作后，输入 java -version 查看是否卸载成功。</p><h2 id="3-下载稳定版JDK文件，根据系统的版本选择合适的-tar-gz文件。在虚拟机home文件夹下新建文件hadoop，并将下载好的JDK文件放入hadoop文件夹中，解压："><a href="#3-下载稳定版JDK文件，根据系统的版本选择合适的-tar-gz文件。在虚拟机home文件夹下新建文件hadoop，并将下载好的JDK文件放入hadoop文件夹中，解压：" class="headerlink" title="3.下载稳定版JDK文件，根据系统的版本选择合适的.tar.gz文件。在虚拟机home文件夹下新建文件hadoop，并将下载好的JDK文件放入hadoop文件夹中，解压："></a>3.下载<a href="https://blog.csdn.net/qq_25881261/article/details/79698252" target="_blank" rel="noopener">稳定版JDK</a>文件，根据系统的版本选择合适的.tar.gz文件。在虚拟机home文件夹下新建文件hadoop，并将下载好的JDK文件放入hadoop文件夹中，解压：</h2><pre><code>tar -zxvf jdk-linux-x64.tar.gz(此处为你自己下载的版本)</code></pre><h2 id="4-安装完成后，配置环境变量，编辑-etc-profile文件："><a href="#4-安装完成后，配置环境变量，编辑-etc-profile文件：" class="headerlink" title="4.安装完成后，配置环境变量，编辑/etc/profile文件："></a>4.安装完成后，配置环境变量，编辑/etc/profile文件：</h2><pre><code>vi /etc/profile/</code></pre><p>按 i 进入文件插入模式，在文末最后空白处添加：</p><pre><code>#java environmentexport JAVA_HOME=/usr/java/jdk1.8.0_144（此处为jdk路径）export CLASSPATH=.:${JAVA_HOME}/jre/lib/rt.jar:${JAVA_HOME}/lib/dt.jar:${JAVA_HOME}/lib/tools.jarexport PATH=$PATH:${JAVA_HOME}/bin</code></pre><p>按 esc 键退出编辑模式，：wq 保存并退出文件。</p><pre><code>source /etc/profile （让设置的环境变量生效）oche $JAVA_HOME （查看jdk安装路径是否保存）</code></pre><h2 id="5-检查是否成功安装："><a href="#5-检查是否成功安装：" class="headerlink" title="5.检查是否成功安装："></a>5.检查是否成功安装：</h2><pre><code>java -version</code></pre><h2 id="6-补充："><a href="#6-补充：" class="headerlink" title="6.补充："></a>6.补充：</h2><p> 终端命令行输入是用户身份还是root身份，视情况而定，建议涉及到文件编辑等，以用户身份，如果提示权限要求，则以root 身份。<br>用户身份与root身份切换：</p><pre><code>su root(用户切换至root)su 用户名（即系统锁屏休眠的名字）（root切换至用户）</code></pre><h1 id="二、SSH免密设置"><a href="#二、SSH免密设置" class="headerlink" title="二、SSH免密设置"></a>二、SSH免密设置</h1><h2 id="1-切换至root-身份，测试是否能免密登录："><a href="#1-切换至root-身份，测试是否能免密登录：" class="headerlink" title="1.切换至root 身份，测试是否能免密登录："></a>1.切换至root 身份，测试是否能免密登录：</h2><pre><code>ssh localhost</code></pre><h2 id="2-生成密钥："><a href="#2-生成密钥：" class="headerlink" title="2.生成密钥："></a>2.生成密钥：</h2><pre><code>ssh-keygen -t rsa    (根据提示操作，但凡有输入，全部回车键)</code></pre><h2 id="3-将密钥复制到目标服务器，即终端命令行前的root-目标服务器："><a href="#3-将密钥复制到目标服务器，即终端命令行前的root-目标服务器：" class="headerlink" title="3.将密钥复制到目标服务器，即终端命令行前的root@目标服务器："></a>3.将密钥复制到目标服务器，即终端命令行前的root@目标服务器：</h2><pre><code>ssh-copy-ip +目标服务器  （例如： ssh-copy-ip xt）</code></pre><h2 id="4-测试，不报错，也不需要输入密码："><a href="#4-测试，不报错，也不需要输入密码：" class="headerlink" title="4.测试，不报错，也不需要输入密码："></a>4.测试，不报错，也不需要输入密码：</h2><pre><code>ssh +目标服务器  #Last login:Thu Jul 19 09:34:27 2018(运行结果)</code></pre><p> 如此就配置好了。</p><h1 id="三、安装Hadoop"><a href="#三、安装Hadoop" class="headerlink" title="三、安装Hadoop"></a>三、安装Hadoop</h1><h2 id="1-在hadoop官网选择版本并下载，即Tarball下binary里，选择HTTP最后一个镜像文件（-tar-gz）-并放至hadoop文件夹中，切换至用户身份解压："><a href="#1-在hadoop官网选择版本并下载，即Tarball下binary里，选择HTTP最后一个镜像文件（-tar-gz）-并放至hadoop文件夹中，切换至用户身份解压：" class="headerlink" title="1.在hadoop官网选择版本并下载，即Tarball下binary里，选择HTTP最后一个镜像文件（.tar.gz）,并放至hadoop文件夹中，切换至用户身份解压："></a>1.在<a href="http://hadoop.apache.org/releases.html" target="_blank" rel="noopener">hadoop官网</a>选择版本并下载，即Tarball下binary里，选择HTTP最后一个镜像文件（.tar.gz）,并放至hadoop文件夹中，切换至用户身份解压：</h2><pre><code>tar -zxvf hadoop-3.0.3.tar.gz(对应的版本)</code></pre><h2 id="2-检查hadoop是否成功安装："><a href="#2-检查hadoop是否成功安装：" class="headerlink" title="2.检查hadoop是否成功安装："></a>2.检查hadoop是否成功安装：</h2><pre><code>cd /home/admin/hadoop/hadoop-3.0.3/bin/(进入hadoop安装目录,即解压路径)hadoop version</code></pre><p><img src="http://p5n3jfo7k.bkt.clouddn.com/201803172232_19.png" alt="pic"></p><p>此时，表明已经成功安装hadoop，如果不是，重启系统。</p><h2 id="3-hadoop环境配置"><a href="#3-hadoop环境配置" class="headerlink" title="3.hadoop环境配置"></a>3.hadoop环境配置</h2><pre><code>vi /etc/profile/</code></pre><p>按 i 进入文件插入模式，在文末最后空白处添加：</p><pre><code>export HADOOP_HOME=/home/admin/hadoop/hadoop-3.0.3 (hadoop安装路径)export PATH=$PATH:${HADOOP_HOME}/bin </code></pre><p>按 esc 键退出编辑模式，：wq 保存并退出文件。</p><pre><code>source /etc/profile （让设置的环境变量生效）oche $HADOOP_HOME （查看hadoop安装路径是否保存）</code></pre><h2 id="4-jdk在hadoop中的环境配置："><a href="#4-jdk在hadoop中的环境配置：" class="headerlink" title="4.jdk在hadoop中的环境配置："></a>4.jdk在hadoop中的环境配置：</h2><pre><code>cd /home/admin/hadoop/hadoop-3.0.3/etc/hadoop/ls  (查看该文件目录下的文件)vi hadoop-env.sh  (添加JAVA_HOME路径：JAVA_HOME=/usr/java/jdk1.8.0_144)vi yarn-env.sh  (同上)</code></pre><h1 id="四、搭建hadoop伪分布模式"><a href="#四、搭建hadoop伪分布模式" class="headerlink" title="四、搭建hadoop伪分布模式"></a>四、搭建hadoop伪分布模式</h1><h2 id="1-进入文件配置目录："><a href="#1-进入文件配置目录：" class="headerlink" title="1.进入文件配置目录："></a>1.进入文件配置目录：</h2><pre><code>cd /home/admin/hadoop/hadoop-3.0.3/etc/hadoop/ls</code></pre><h2 id="2-配置core-site-xml文件："><a href="#2-配置core-site-xml文件：" class="headerlink" title="2.配置core-site.xml文件："></a>2.配置core-site.xml文件：</h2><p>在hadoop-3.0.3目录下，创建文件夹tmp：</p><pre><code>mkdir tmppwd     (获取tmp的路径，后面配置tmp)vi core-site.xml</code></pre><p>// 在<configuration> 标签里面加上以下代码</configuration></p><pre><code>&lt;!--配置HDFS的NameNode--&gt;  &lt;property&gt;    &lt;name&gt;fs.defaultFS&lt;/name&gt;    &lt;value&gt;hdfs://localhost：9000&lt;/value&gt; &lt;/property&gt;&lt;!--配置DataNode保存数据的位置--&gt;&lt;property&gt;    &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;     &lt;value&gt;/home/admin/hadoop/hadoop-3.0.3/tmp&lt;/value&gt; &lt;/property&gt;</code></pre><h2 id="3-配置hdfs-site-xml-文件："><a href="#3-配置hdfs-site-xml-文件：" class="headerlink" title="3.配置hdfs-site.xml 文件："></a>3.配置hdfs-site.xml 文件：</h2><pre><code>vi hdfs-site.xml</code></pre><p>// 在<configuration> 标签里面加上以下代码</configuration></p><pre><code>&lt;!--配置HDFS的冗余度--&gt;&lt;property&gt;    &lt;name&gt;dfs.replication&lt;/name&gt;     &lt;value&gt;1&lt;/value&gt; &lt;/property&gt;  &lt;!--配置是否检查权限--&gt;&lt;property&gt;    &lt;name&gt;dfs.permissions&lt;/name&gt;     &lt;value&gt;false&lt;/value&gt; &lt;/property&gt; </code></pre><h2 id="4-配置-mapred-site-xml文件："><a href="#4-配置-mapred-site-xml文件：" class="headerlink" title="4.配置 mapred-site.xml文件："></a>4.配置 mapred-site.xml文件：</h2><pre><code>vi mapred-site.xml</code></pre><p>// 在<configuration> 标签里面加上以下代码</configuration></p><pre><code>&lt;!--配置MapReduce的框架--&gt;&lt;property&gt;     &lt;name&gt;mapreduce.framework.name&lt;/name&gt;     &lt;value&gt;yarn&lt;/value&gt;&lt;/property&gt;</code></pre><h2 id="5-配置-yarn-site-xml-文件："><a href="#5-配置-yarn-site-xml-文件：" class="headerlink" title="5.配置 yarn-site.xml 文件："></a>5.配置 yarn-site.xml 文件：</h2><pre><code>vi yarn-site.xml</code></pre><p>// 在<configuration> 标签里面加上以下代码</configuration></p><pre><code>&lt;!--配置主节点ResourceManager的地址--&gt;&lt;property&gt;    &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;    &lt;value&gt;localhost&lt;/value&gt;&lt;/property&gt;&lt;!--配置节点NodeManager执行任务的方式--&gt;&lt;property&gt;    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;    &lt;value&gt;mapreduce_shuffle&lt;/value&gt;&lt;/property&gt;</code></pre><h2 id="6-切换至root身份，格式化NameNode"><a href="#6-切换至root身份，格式化NameNode" class="headerlink" title="6.切换至root身份，格式化NameNode:"></a>6.切换至root身份，格式化NameNode:</h2><pre><code>cd /home/admin/hadoop/hadoop-3.0.3/bin/hdfs namenode -format</code></pre><p>成功的话，会看到 “successfully formatted” 和 “Exitting with status 0” 的提示，若为 “Exitting with status 1” 则是出错　</p><h2 id="7-启动hadoop："><a href="#7-启动hadoop：" class="headerlink" title="7.启动hadoop："></a>7.启动hadoop：</h2><pre><code>cd /home/admin/hadoop/hadoop-3.0.3/sbin/start-all.sh</code></pre><p>如果出现下面情况，是因为缺少用户定义：</p><p><img src="http://p5n3jfo7k.bkt.clouddn.com/201803181614_414.png" alt="pic">  </p><p>解决方案：</p><p>   1.配置start-dfs.sh 和 stop-dfs.sh：</p><pre><code>vi start-dfs.sh   （vi stop-dfs.sh）</code></pre><p>//把以下代码复制到文件的空白处 ：wq 保存退出</p><pre><code>HDFS_DATANODE_USER=rootHDFS_DATANODE_SECURE_USER=hdfsHDFS_NAMENODE_USER=rootHDFS_SECONDARYNAMENODE_USER=root</code></pre><p>   2.配置 start-yarn.sh 和 stop-yarn.sh</p><pre><code>vi start-yarn.sh  (vi stop-yarn.sh)</code></pre><p>//把以下代码复制到文件的空白处 ：wq 保存退出</p><pre><code>YARN_RESOURCEMANAGER_USER=rootHADOOP_SECURE_DN_USER=yarnYARN_NODEMANAGER_USER=root</code></pre><p>配置完成后，重新启动，正确情况如下图所示。</p><h2 id="7-查看进程："><a href="#7-查看进程：" class="headerlink" title="7.查看进程："></a>7.查看进程：</h2><pre><code>jps</code></pre><p><img src="http://p5n3jfo7k.bkt.clouddn.com/201803181622_20.png" alt="pic1"><br> 红框内5个进程缺一不可，如果没有有一个没有启动，必须关闭所有所有进程（stop-all.sh），重新启动。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在安装hadoop之前，请自行学习安装虚拟机以及CentOS7系统。&lt;/p&gt;
&lt;h1 id=&quot;一、安装JDK&quot;&gt;&lt;a href=&quot;#一、安装JDK&quot; class=&quot;headerlink&quot; title=&quot;一、安装JDK&quot;&gt;&lt;/a&gt;一、安装JDK&lt;/h1&gt;&lt;h2 id=&quot;1-c
      
    
    </summary>
    
    
      <category term="hadoop" scheme="http://yoursite.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Next 主题配置</title>
    <link href="http://yoursite.com/2018/07/10/Next-%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/07/10/Next-主题配置/</id>
    <published>2018-07-10T09:05:59.000Z</published>
    <updated>2018-07-11T02:13:46.406Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>个人博客搭建好之后，可以根据自己的喜好在<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo官网</a>上选择合适的博客主题，本文将介绍Next 主题。</p><h1 id="next下载及修改"><a href="#next下载及修改" class="headerlink" title="next下载及修改"></a>next下载及修改</h1><h2 id="1-主题下载，在Git-窗口输入命令行："><a href="#1-主题下载，在Git-窗口输入命令行：" class="headerlink" title="1.主题下载，在Git 窗口输入命令行："></a>1.主题下载，在Git 窗口输入命令行：</h2><pre><code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></pre><h2 id="2-通过博客的配置文件-config-yml进行主题修改"><a href="#2-通过博客的配置文件-config-yml进行主题修改" class="headerlink" title="2.通过博客的配置文件_config.yml进行主题修改"></a>2.通过博客的配置文件_config.yml进行主题修改</h2><p>   在Sublime Text 编译器中打开_config.yml，搜索 theme:</p><pre><code>#Themes: https://hexo.io/themes/theme: next </code></pre><h1 id="Next配置"><a href="#Next配置" class="headerlink" title="Next配置"></a>Next配置</h1><h2 id="1-主页样式选择"><a href="#1-主页样式选择" class="headerlink" title="1.主页样式选择"></a>1.主页样式选择</h2><p>  在next主题中，共有4种主题模式：Muse、Mist、Pisces、Gemini，默认Muse,选择哪一种，将前面的#去掉：</p><pre><code># Schemes#scheme: Muse#scheme: Mistscheme: Pisces#scheme: Gemini</code></pre><h2 id="2-添加-标签-分类-页面"><a href="#2-添加-标签-分类-页面" class="headerlink" title="2.添加[标签][分类]页面"></a>2.添加[标签][分类]页面</h2><p>  在Git 窗口，输入命令行：</p><pre><code>hexo new page tags hexo new page categories</code></pre><p>此时，在博客的根文件下，source 中可以看到新建的tags 和 categories 页面，用编译器打开，将页面的type设置为tags 和 categories，上传到域名博客中，将自动显示标签和分类。</p><h2 id="3-设置代码高亮主题"><a href="#3-设置代码高亮主题" class="headerlink" title="3.设置代码高亮主题"></a>3.设置代码高亮主题</h2><p>NexT使用<a href="https://github.com/chriskempson/tomorrow-theme" target="_blank" rel="noopener">Tomorrow Theme</a>作为代码高亮，共有5款主题可以选择：normal、night、night blue、night bright、night eighties,默认normal.<br>在next主题配置文件中更改highlight_theme字段：</p><pre><code>#Code Highlight theme#Available value:#normal | night | night eighties | night blue | night bright#https://github.com/chriskempson/tomorrow-themehighlight_theme: night bright</code></pre><h2 id="4-侧边栏社交链接"><a href="#4-侧边栏社交链接" class="headerlink" title="4.侧边栏社交链接"></a>4.侧边栏社交链接</h2><h3 id="1-链接"><a href="#1-链接" class="headerlink" title="1.链接"></a>1.链接</h3><p>  查找next配置文件中social字段，键值格式为  显示文本：链接地址</p><pre><code>social:GitHub: https://github.com/yourname || githubE-Mail: mailto:yourname@gmail.com || envelope微博: http://weibo.com/your-user-name知乎: http://www.zhihu.com/peoplr/your-user-name</code></pre><h3 id="2-链接图标"><a href="#2-链接图标" class="headerlink" title="2.链接图标"></a>2.链接图标</h3><p> 查找social_icons，键值格式为  匹配值：Font Awesome 图标名称，enable用于控制是否显示图标，设置false去掉图标：</p><pre><code>social_icons: enable: true icons_only: false transition: false</code></pre><h2 id="5-头像设置"><a href="#5-头像设置" class="headerlink" title="5.头像设置"></a>5.头像设置</h2><p>  将头像放置\themes\next\source\images中，在next配置文件中查找avatar</p><pre><code>avatar: /images/(头像图片文件名).jpg</code></pre><h2 id="6-背景图片"><a href="#6-背景图片" class="headerlink" title="6.背景图片"></a>6.背景图片</h2><p>  将图片放入\themes\next\source\images中，在\themes\next\source\css_custom\custom.styl中添加字段：</p><pre><code>body {     background:url(/images/backgroud.jpg);     background-repeat: no-repeat;       background-attachment:fixed;     background-position:50% 50%;}.main-inner {     margin-top: -10px;    opacity: 0.85;}</code></pre><p>repeat表是否重复，attachment是否滚动</p><h2 id="7-打赏功能"><a href="#7-打赏功能" class="headerlink" title="7.打赏功能"></a>7.打赏功能</h2><p> 将收款码图片放入\themes\next\source\images中，next配置文件中查找Reward字段：</p><pre><code># Reward 打赏reward_comment: Donate comment herewechatpay: /images/wechatpay.jpg（微信）alipay: /images/alipay.jpg（支付宝）</code></pre><h2 id="8-动态背景"><a href="#8-动态背景" class="headerlink" title="8.动态背景"></a>8.动态背景</h2><p> next配置文件中查找canvas字段，共有4种动态模式可以选择：nest、waves、lines、sphere.将选择的模式后面的false改为true。</p><pre><code># Canvas-nestcanvas_nest: true# three_wavesthree_waves: false# canvas_linescanvas_lines: false# canvas_spherecanvas_sphere: false</code></pre><h2 id="9-文章首页设置全文阅读"><a href="#9-文章首页设置全文阅读" class="headerlink" title="9.文章首页设置全文阅读"></a>9.文章首页设置全文阅读</h2><p> next配置文件中查找auto_excerpt字段：</p><pre><code>auto_excerpt:  enable: true  length: 150 </code></pre><h2 id="10-valine评论功能"><a href="#10-valine评论功能" class="headerlink" title="10.valine评论功能"></a>10.valine评论功能</h2><p>  进入<a href="leancloud.cn">leancloud</a>访问控制台，注册账号之后，创建应用（应用名任意取），进入设置中心–应用Key，将App ID和App Key放入next配置文件中：</p><pre><code># Valine. # You can get your appid and appkey from https://leancloud.cn# more info please open https://valine.js.orgvaline:  enable: true  appid:  (App ID)  appkey:  (App Key)  notify: false # mail notifier , https://github.com/xCss/Valine/wiki  verify: false # Verification code  placeholder: Just go go # comment box placeholder  avatar: mm # gravatar style  guest_info: nick,mail,link # custom comment header  pageSize: 10 # pagination size</code></pre><p>之后，将博客的域名地址填入leancloud –设置–安全中心–Web安全域名，并保存。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;个人博客搭建好之后，可以根据自己的喜好在&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;no
      
    
    </summary>
    
    
      <category term="next" scheme="http://yoursite.com/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>Hexo与GitHub搭建个人博客</title>
    <link href="http://yoursite.com/2018/06/26/Hexo%E4%B8%8EGitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2018/06/26/Hexo与GitHub搭建个人博客/</id>
    <published>2018-06-26T01:56:55.000Z</published>
    <updated>2018-07-09T08:12:04.025Z</updated>
    
    <content type="html"><![CDATA[<p>#一、 概述</p><h3 id="1-Hexo"><a href="#1-Hexo" class="headerlink" title="1.Hexo"></a>1.Hexo</h3><p>Hexo 是一个快速、简洁且高效的静态博客框架。</p><h3 id="2-Git与Github"><a href="#2-Git与Github" class="headerlink" title="2.Git与Github"></a>2.Git与Github</h3><p>Git是一种版本控制系统，Github是一个网站，给用户提供git服务，类似于百度云盘储存文件。</p><h3 id="3-相关软件"><a href="#3-相关软件" class="headerlink" title="3.相关软件"></a>3.相关软件</h3><p>  1.<a href="https://www.git-scm.com/download/" target="_blank" rel="noopener">Git</a></p><p>  2.<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">Node.js</a>基于 Chrome V8 引擎的 JavaScript 运行环境。 </p><p>  3.<a href="https://www.sublimetext.com/" target="_blank" rel="noopener">Sublime Text</a>编译器</p><p>#二、Github准备</p><pre><code>在[Github官网](https://github.com/)注册账号（建议使用谷歌浏览器，自带翻译功能），新建项目，项目名称：**Github账号名.github.io**</code></pre><p>#三、搭建工作</p><h3 id="1-检验Node是否安装。win-R-下进入-cmd-命令行窗口，输入命令："><a href="#1-检验Node是否安装。win-R-下进入-cmd-命令行窗口，输入命令：" class="headerlink" title="1.检验Node是否安装。win+R 下进入 cmd 命令行窗口，输入命令："></a>1.检验Node是否安装。win+R 下进入 cmd 命令行窗口，输入命令：</h3><pre><code>node -v</code></pre><h3 id="2-安装Hexo-，在-cmd-命令行窗口输入命令："><a href="#2-安装Hexo-，在-cmd-命令行窗口输入命令：" class="headerlink" title="2.安装Hexo ，在 cmd 命令行窗口输入命令："></a>2.安装Hexo ，在 cmd 命令行窗口输入命令：</h3><pre><code>npm install hexo-cli -g</code></pre><h3 id="3-在合适的盘中新建文件夹，右键点击-Git-Bash-Here-依次输入如下命令："><a href="#3-在合适的盘中新建文件夹，右键点击-Git-Bash-Here-依次输入如下命令：" class="headerlink" title="3.在合适的盘中新建文件夹，右键点击 Git Bash Here,依次输入如下命令："></a>3.在合适的盘中新建文件夹，右键点击 Git Bash Here,依次输入如下命令：</h3><pre><code>git config --global user.name &quot;Github账户名称&quot;git config --global user.email&quot;邮箱&quot;hexo inithexo installnpm install hexo-deployer-git --save</code></pre><h3 id="4-在-Github之前新建项目下，找到项目地址并复制："><a href="#4-在-Github之前新建项目下，找到项目地址并复制：" class="headerlink" title="4. 在 Github之前新建项目下，找到项目地址并复制："></a>4. 在 Github之前新建项目下，找到项目地址并复制：</h3><pre><code>https://github.com/Github账号名/Github账号名.github.io.git</code></pre><h3 id="5-打开Sublime-Text3编译器，将新建的博客文件夹鼠标拖入Sublime主页，打开左侧目录栏中-config-yml文件，修改文末deployment如下："><a href="#5-打开Sublime-Text3编译器，将新建的博客文件夹鼠标拖入Sublime主页，打开左侧目录栏中-config-yml文件，修改文末deployment如下：" class="headerlink" title="5.打开Sublime Text3编译器，将新建的博客文件夹鼠标拖入Sublime主页，打开左侧目录栏中_config.yml文件，修改文末deployment如下："></a>5.打开Sublime Text3编译器，将新建的博客文件夹鼠标拖入Sublime主页，打开左侧目录栏中_config.yml文件，修改文末deployment如下：</h3><pre><code>deploy：  type: git（注意冒号后有空格，正确颜色为：type红色，git黄色）  repo: https://github.com/cymj0612/cymj0612.github.io.git  branch: master一定要先保存！！！</code></pre><h3 id="6-在Git-窗口运行命令："><a href="#6-在Git-窗口运行命令：" class="headerlink" title="6.在Git 窗口运行命令："></a>6.在Git 窗口运行命令：</h3><pre><code>hexo g -d</code></pre><h3 id="7-检验Github新建项目中是否上传文件，然后复制该网页网址末端并搜索：账户名称-github-io，即可进入个人博客。"><a href="#7-检验Github新建项目中是否上传文件，然后复制该网页网址末端并搜索：账户名称-github-io，即可进入个人博客。" class="headerlink" title="7.检验Github新建项目中是否上传文件，然后复制该网页网址末端并搜索：账户名称.github.io，即可进入个人博客。"></a>7.检验Github新建项目中是否上传文件，然后复制该网页网址末端并搜索：账户名称.github.io，即可进入个人博客。</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#一、 概述&lt;/p&gt;
&lt;h3 id=&quot;1-Hexo&quot;&gt;&lt;a href=&quot;#1-Hexo&quot; class=&quot;headerlink&quot; title=&quot;1.Hexo&quot;&gt;&lt;/a&gt;1.Hexo&lt;/h3&gt;&lt;p&gt;Hexo 是一个快速、简洁且高效的静态博客框架。&lt;/p&gt;
&lt;h3 id=&quot;2-G
      
    
    </summary>
    
    
  </entry>
  
</feed>
